{
  "id": "todo-realm",
  "realm": "todo-realm",
  "displayName": "Todo App Realm",
  "enabled": true,
  "sslRequired": "none",
  "registrationAllowed": true,
  "registrationEmailAsUsername": true,
  "resetPasswordAllowed": true,
  "editUsernameAllowed": false,
  "bruteForceProtected": true,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "user-role-id",
        "name": "user",
        "description": "Standard user role",
        "composite": false,
        "clientRole": false,
        "containerId": "todo-realm"
      },
      {
        "id": "admin-role-id",
        "name": "admin",
        "description": "Administrator role",
        "composite": false,
        "clientRole": false,
        "containerId": "todo-realm"
      }
    ]
  },
  "clients": [
    {
      "id": "todo-frontend-id",
      "clientId": "todo-frontend",
      "name": "Todo Frontend Client",
      "description": "Public client for React frontend",
      "enabled": true,
      "publicClient": true,
      "protocol": "openid-connect",
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "authorizationServicesEnabled": false,
      "redirectUris": [
        "http://localhost:3000/*",
        "http://127.0.0.1:3000/*",
        "http://todoapp.local:3000/*"
      ],
      "webOrigins": [
        "http://localhost:3000",
        "http://127.0.0.1:3000",
        "http://todoapp.local:3000"
      ],
      "attributes": {
        "pkce.code.challenge.method": "S256",
        "post.logout.redirect.uris": "http://localhost:3000/*"
      },
      "protocolMappers": [
        {
          "name": "realm-roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "todo-backend-id",
      "clientId": "todo-backend",
      "name": "Todo Backend Client",
      "description": "Confidential client for Node.js backend",
      "enabled": true,
      "publicClient": false,
      "protocol": "openid-connect",
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "secret": "your-keycloak-client-secret-change-in-production",
      "redirectUris": [
        "http://localhost:5000/*"
      ],
      "webOrigins": [
        "http://localhost:5000"
      ],
      "protocolMappers": [
        {
          "name": "realm-roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    }
  ],
  "users": [
    {
      "id": "demo-user-id",
      "username": "demo",
      "email": "demo@example.com",
      "firstName": "Demo",
      "lastName": "User",
      "enabled": true,
      "emailVerified": true,
      "credentials": [
        {
          "type": "password",
          "value": "demo123",
          "temporary": false
        }
      ],
      "realmRoles": ["user"],
      "attributes": {}
    },
    {
      "id": "admin-user-id",
      "username": "admin",
      "email": "admin@example.com",
      "firstName": "System",
      "lastName": "Administrator",
      "enabled": true,
      "emailVerified": true,
      "credentials": [
        {
          "type": "password",
          "value": "admin123",
          "temporary": false
        }
      ],
      "realmRoles": ["admin", "user"],
      "attributes": {}
    },
    {
      "id": "test1-user-id",
      "username": "testuser1",
      "email": "test1@example.com",
      "firstName": "Test",
      "lastName": "User One",
      "enabled": true,
      "emailVerified": true,
      "credentials": [
        {
          "type": "password",
          "value": "demo123",
          "temporary": false
        }
      ],
      "realmRoles": ["user"],
      "attributes": {}
    },
    {
      "id": "test2-user-id",
      "username": "testuser2",
      "email": "test2@example.com",
      "firstName": "Test",
      "lastName": "User Two",
      "enabled": true,
      "emailVerified": true,
      "credentials": [
        {
          "type": "password",
          "value": "demo123",
          "temporary": false
        }
      ],
      "realmRoles": ["user"],
      "attributes": {}
    }
  ],
  "scopeMappings": [],
  "clientScopeMappings": {},
  "groups": [],
  "defaultRoles": ["user"],
  "requiredActions": [],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "adminEventsEnabled": "false",
    "adminEventsDetailsEnabled": "false",
    "eventsEnabled": "false",
    "eventsListeners": "jboss-logging",
    "frontendUrl": ""
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [],
  "authenticatorConfig": []
}