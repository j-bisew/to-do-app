services:
  frontend:
    build:
      target: development  # Use development stage if multi-stage
      args:
        - NODE_ENV=development
    environment:
      - REACT_APP_API_URL=http://localhost:5000
      - FAST_REFRESH=true
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/build
    command: npm start
    stdin_open: true
    tty: true
    ports:
      - "3000:3000"

  backend:
    build:
      args:
        - NODE_ENV=development
    environment:
      - NODE_ENV=development
      - DEBUG=app:*
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev
    ports:
      - "5000:5000"
      - "9229:9229"  # Node.js debugging port

  notification-service:
    build:
      args:
        - NODE_ENV=development
    environment:
      - NODE_ENV=development
      - DEBUG=notification:*
    volumes:
      - ./notification-service:/app
      - /app/node_modules
    command: npm run dev

  # Additional development services
  postgres:
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_LOG_STATEMENT=all
      - POSTGRES_LOG_MIN_DURATION_STATEMENT=0
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./database/dev-data.sql:/docker-entrypoint-initdb.d/99-dev-data.sql

  redis:
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --loglevel verbose

  rabbitmq:
    ports:
      - "5672:5672"
      - "15672:15672"  # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=adminpass123
    volumes:
      - rabbitmq_dev_data:/var/lib/rabbitmq

  # Development tools
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: todo-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@todoapp.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
      - PGADMIN_CONFIG_SERVER_MODE=False
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - todo-network
    depends_on:
      - postgres

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: todo-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    networks:
      - todo-network
    depends_on:
      - redis

volumes:
  postgres_dev_data:
    driver: local
  rabbitmq_dev_data:
    driver: local
  pgadmin_data:
    driver: local